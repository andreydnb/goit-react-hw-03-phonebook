{"version":3,"sources":["components/Filter/filter.module.css","components/Container/container.module.css","components/ContactForm/contactForm.module.css","components/ContactList/contactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","container","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","form","label","type","onChange","placeholder","btn","Component","Filter","input","ContactList","contacts","onDeleteContact","s","list","map","id","item","info","onClick","App","filter","addContact","contact","shortid","generate","find","toLowerCase","alert","trim","test","deleteContact","contactId","changeFilter","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","visibleContacts","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce5d3029.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__31JTG\",\"input\":\"filter_input__1-IfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3-vIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__2geOo\",\"label\":\"contactForm_label__3Pa3S\",\"input\":\"contactForm_input__1mrZK\",\"btn\":\"contactForm_btn__2BVKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__18cG8\",\"item\":\"contactList_item__1RlRd\",\"btn\":\"contactList_btn__z_JBH\"};","import PropTypes from 'prop-types';\r\nimport styles from './container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './contactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState ({ [name]: value });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.setState({ name: '', number: '' });\r\n\r\n    };\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className={styles.form} onSubmit={this.handleSubmit}>\r\n                <label className={styles.label}>Name\r\n                    <input\r\n                        className={styles.label}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Andrii Hrytsai\" />\r\n                </label>\r\n                <label className={styles.label}>Number\r\n                    <input\r\n                        className={styles.label}\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"099-99-99\" />\r\n                </label>\r\n                <button className={styles.btn} type=\"submit\">\r\n                        Add contact\r\n                    </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","   \r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import PropTypes from \"prop-types\";\r\nimport s from './contactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <p className={s.info}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import './App.css';\r\nimport { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n    ],\r\n    filter: '',\r\n  };\r\ncomponentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const { contacts } = this.state;\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else if (contacts.find(contact => contact.number === number)) {\r\n      alert(`${number} is already in contacts.`);\r\n    } else if (name.trim() === '' || number.trim() === '') {\r\n      alert(\"Enter the contact's name and number phone!\");\r\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\r\n      alert('Enter the correct number phone!');\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n        )}\r\n        {contacts.length > 0 ? (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        ) : (\r\n          <p>Your phonebook is empty. Please add contact.</p>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}